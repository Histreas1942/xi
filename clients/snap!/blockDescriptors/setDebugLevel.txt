/*********************************************************************************************
 *
 * * * * Xi4Snap * * *
 *
 * setDebugLevel
 *
 *
 *
 *********************************************************************************************
 * Created by afy on 9/21/14.
 *
 * This is the Xi Client for Snap!
 *
 * Version v.001
 *
 *
 * @author: Alan Yorinks
 Copyright (c) 2014 Alan Yorinks All right reserved.

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public
 License as published by the Free Software Foundation; either
 version 3.0 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */


 if (window.xi_beenHereDoneThat === undefined || window.xi_beenHereDoneThat === false) {
 if (window.xi_debugLevel >= 0) {
 console.log('Globals defined');
 }

 // 0 = no debug
 // 1 = low level debug
 // 2 = high - open the floodgates
 // Variable is set by user through a Scratch command block
 window.xi_debugLevel = 0;

 // Board IP addresses and ports are set by the user with a Scratch command block, and the information
 // is stored in the WebSocket Array

 // WebSocket array
 // Each board will have an associated WebSocket instance used for communication
 // with the Xi client. webSocketsArray is an array of objects. Each object has a format of:
 // {id: BoardID, , ip: IPAddress, port: port, ws: WebSocketReference}

 window.xi_webSocketsArray = [];

 // Sensor Data Array
 // This is an array of objects that store the latest sensor or switch value updates received from all Xi servers.
 // The object format is:
 // key: generated by genReporterKey()
 // value: latest updated value
 // A key is used to uniquely identify each data entry with a specific sensor on a specific server
 window.xi_sensorDataArray = [];

 window.xi_beenHereDoneThat = true;

 }
 else {
 if (window.xi_debugLevel >= 0) {
 console.log("Globals Previously Defined");
 }
 }

 window.xi_debugLevel = level;

 if (window.xi_debugLevel >= 0) {
 console.log('Debug Level Set to ' + window.xi_debugLevel);
 }
